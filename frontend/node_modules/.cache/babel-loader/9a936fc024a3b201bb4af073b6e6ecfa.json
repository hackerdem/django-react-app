{"ast":null,"code":"import _toConsumableArray from \"/home/erdem/Desktop/blog/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/erdem/Desktop/blog/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/erdem/Desktop/blog/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/erdem/Desktop/blog/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/erdem/Desktop/blog/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/erdem/Desktop/blog/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/erdem/Desktop/blog/reactapp/frontend/src/components/MainLayout/Pagination.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MDBPagination, MDBPageItem, MDBPageNav, MDBCol, MDBRow } from \"mdbreact\";\nvar propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number\n};\nvar defaultProps = {\n  initialPage: 1,\n  pageSize: 6\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n    _this.state = {\n      pager: {}\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.items && this.props.items.length) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.items !== prevProps.items) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      var _this$props = this.props,\n          items = _this$props.items,\n          pageSize = _this$props.pageSize;\n      console.log(items, pageSize);\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      }\n\n      pager = this.getPager(items.length, page, pageSize);\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n      this.setState({\n        pager: pager\n      });\n      this.props.onChangePage(pageOfItems);\n    }\n  }, {\n    key: \"getPager\",\n    value: function getPager(totalItems, currentPage, pageSize) {\n      currentPage = currentPage || 1;\n      pageSize = pageSize || 2;\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage, endPage;\n\n      if (totalPages <= 10) {\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      }\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n      var pages = _toConsumableArray(Array(endPage + 1 - startPage).keys()).map(function (i) {\n        return startPage + 1;\n      });\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n        return null;\n      }\n\n      return React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title my-5 text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Bootstrap MDBPagination\"), React.createElement(MDBPagination, {\n        circle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(MDBPageItem, {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        onClick: function onClick() {\n          return _this2.setPage(1);\n        },\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"First\"))), React.createElement(MDBPageItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        \"aria-label\": \"Previous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\xAB\"), React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Previous\"))), React.createElement(MDBPageItem, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"1 \", React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"(current)\"))), React.createElement(MDBPageItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"2\")), React.createElement(MDBPageItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"3\")), React.createElement(MDBPageItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"4\")), React.createElement(MDBPageItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"5\")), React.createElement(MDBPageItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"\\xBB\")), React.createElement(MDBPageItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(MDBPageNav, {\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Last\")))));\n    }\n  }]);\n\n  return Pagination;\n}(Component);\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","map":{"version":3,"sources":["/home/erdem/Desktop/blog/reactapp/frontend/src/components/MainLayout/Pagination.js"],"names":["React","Component","PropTypes","MDBPagination","MDBPageItem","MDBPageNav","MDBCol","MDBRow","propTypes","items","array","isRequired","onChangePage","func","initialPage","number","pageSize","defaultProps","Pagination","props","state","pager","length","setPage","prevProps","prevState","page","console","log","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MDBPagination, MDBPageItem, MDBPageNav, MDBCol, MDBRow } from \"mdbreact\";\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 6\n}\n\nclass Pagination  extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            pager: {}\n        };\n    }\n\n    componentWillMount() {\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage)\n        }\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page){\n        var {items,pageSize} = this.props;\n        console.log(items,pageSize)\n        var pager = this.state.pager;\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n        pager = this.getPager(items.length, page, pageSize);\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex +1);\n        this.setState({pager:pager});\n        this.props.onChangePage(pageOfItems);\n        \n\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        currentPage = currentPage || 1;\n        pageSize = pageSize || 2;\n\n        var totalPages = Math.ceil(totalItems/pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            startPage = 1;\n            endPage = totalPages;\n\n        }else{\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            }else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage +1);\n        return {\n            totalItems: totalItems,\n            currentPage:currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages  \n        };\n    }\nrender(){\n    var pager = this.state.pager;\n    if (!pager.pages || pager.pages.length <= 1) {\n      return null\n  }\n    return (\n        <MDBRow>\n      <MDBCol>\n        <h4 className=\"title my-5 text-left\">Bootstrap MDBPagination</h4>\n        <MDBPagination circle>\n          <MDBPageItem className={pager.currentPage===1 ? 'disabled' : '' }>\n            <MDBPageNav onClick={() => this.setPage(1)} className=\"page-link\">\n              <span>First</span>\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem disabled>\n            <MDBPageNav className=\"page-link\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span className=\"sr-only\">Previous</span>\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem active>\n            <MDBPageNav className=\"page-link\">\n              1 <span className=\"sr-only\">(current)</span>\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem>\n            <MDBPageNav className=\"page-link\">\n              2\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem>\n            <MDBPageNav className=\"page-link\">\n              3\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem>\n            <MDBPageNav className=\"page-link\">\n              4\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem>\n            <MDBPageNav className=\"page-link\">\n              5\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem>\n            <MDBPageNav className=\"page-link\">\n              &raquo;\n            </MDBPageNav>\n          </MDBPageItem>\n          <MDBPageItem>\n            <MDBPageNav className=\"page-link\">\n              Last\n            </MDBPageNav>\n          </MDBPageItem>\n        </MDBPagination>\n      </MDBCol>\n    </MDBRow>\n    )\n\n}\n}\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}